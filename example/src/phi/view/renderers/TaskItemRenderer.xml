<?xml version="1.0" encoding="utf-8"?>
<ListItemRenderer onCreationComplete="creationComplete()">

	<Import className="popups.AddNewTaskPopUp" />
	
	<HBox width="100%" 
		  height="35"
		  gap="5"
		  paddingLeft="10">
		  
		<CheckBox id="chk"
				  onMousedown="stopSelectingTask()"
				  onClick="putTaskAsDone()" />
		
		<Label id="taskTitleLb" text="{this.data.label}" width="100%" />
		
		<Image source="assets/images/create.gif"
			   onClick="showAddPopUp()"
			   buttonMode="true" />
			   
		<Image source="assets/images/delete.png" 
			   onClick="deleteTask()" 
			   buttonMode="true" />
			   	   
		<Image id="optionsBtn"
			   source="assets/images/options.png"
			   onMousedown="stopSelectingTask()"
			   onClick="showOptionsMenu()"
			   buttonMode="true" />
	</HBox>
	
	<JavaScript>
		<![CDATA[
		
		creationComplete: function()
		{
			this.optionsMenu = new phi.ui.Menu();
			this.optionsMenu.setDataProvider( new phi.collections.ArrayCollection({
				source: [
					{label: "Move Up"},
					{label: "Move Down"},
					{type: "separator"},
					{label: "Settings"}
				], 
				useProxyObjects: true
			}));
			
			this.optionsMenu.addEvent('itemClick', this.onMenuItemClick.bind(this) );
		},
		
		showAddPopUp: function()
		{
			var popUp = phi.mn.PopUpManager.createPopUp( AddNewTaskPopUp, {hideOnClick: false} );
			
			popUp.show( true );
			popUp.center();
		},
		
		showOptionsMenu: function( event )
		{
			this.optionsMenu.snapTo( this.optionsBtn );
		},
		
		onMenuItemClick: function( event )
		{
			switch( event.index ) {
				case 0: {
					this.sendMessage('moveTask', {task: this.getData(), direction: 'up'});
					break;
				}
				
				case 1: {
					this.sendMessage('moveTask', {task: this.getData(), direction: 'down'});
					break;
				}
			}
		},
		
		putTaskAsDone: function( event )
		{
			event.stopPropagation();
			
			this.taskTitleLb.removeClass('strike');
		
			if( this.chk.getChecked() == true )
				this.taskTitleLb.addClass('strike');
		},
		
		deleteTask: function()
		{
			this.sendMessage("deleteTask", {task: this.data});
		},
	
		stopSelectingTask: function( event )
		{
			event.stop();
		}
		
		]]>
	</JavaScript>
</ListItemRenderer>