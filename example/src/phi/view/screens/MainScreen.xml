<?xml version="1.0" encoding="utf-8"?>
<View width="100%"
	  height="100%"
	  onCreationComplete="creationComplete()"
	  horizontalAlign="center">

	<VBox horizontalAlign="center" gap="10">
		<Image source="assets/images/todo.png" paddingBottom="20"/>
		
		<HBox gap="4">
			<TextInput id="itemNameTi"
					   width="160"
					   onEnter="addTask()" 
					   text="{this.tasksList.selectedItem.name}"/>
					   
			<Button text="Add task"
				    onClick="addTask()" />

			<Button text="Edit" 
					style="primary" 
					enabled="{this.tasksList.selectedItem}"
					onClick="editTask()" />
					
			<Button text="Delete" 
					style="danger" 
					onClick="deleteTask()"
					enabled="{this.tasksList.selectedItem}" />
		</HBox>
		
		<List id="tasksList" 
			  width="400"
			  height="400"
			  itemRenderer="renderers.TaskItemRenderer"
			  dataProvider="{this.model.tasks}" />
		
		<HBox gap="4">
			<Button text="Logout!" onClick="logout()" style="success" />
			
		</HBox>	  
		
	</VBox>
	
	<JavaScript>
		
		messages: {
			deleteTask: 'onDeleteTask',
		},
		
		creationComplete: function()
		{
			this.setModel( new Phi.Mvc.Model({tasks: this.buildTasks() }));
		},
		
		buildTasks: function()
		{
			var tasks = new Phi.Core.ArrayCollection();
			
			tasks.addItem( new Phi.Mvc.Model({name: "Task1", isDone: false}));
			tasks.addItem( new Phi.Mvc.Model({name: "Create a list", isDone: false}));
			tasks.addItem( new Phi.Mvc.Model({name: "Do shopping", isDone: false}));
			tasks.addItem( new Phi.Mvc.Model({name: "Sheet", isDone: false}));
			
			return tasks;
		},
		
		logout: function()
		{
			this.sendMessage("logout");
		},
		
		addTask: function()
		{
			var tasks = this.tasksList.getDataProvider();
			tasks.addItem(new Phi.Mvc.Model({name: this.itemNameTi.getText()}));
			
			this.itemNameTi.setText("");
		},
		
		editTask: function()
		{
			var selectedTask = this.tasksList.getSelectedItem();
			selectedTask.set({name: this.itemNameTi.getText() });
			
			//console.log( 'edit task' );
		},
		
		deleteTask: function()
		{
			var selectedTask = this.tasksList.getSelectedItem();
			
			this.tasksList.getDataProvider().removeItem( selectedTask );
			this.itemNameTi.setText("");
		},
		
		onDeleteTask: function( msg )
		{
			this.tasksList.getDataProvider().removeItem( msg.task );
			this.itemNameTi.setText("");
		}
		
	</JavaScript>
	
</View>